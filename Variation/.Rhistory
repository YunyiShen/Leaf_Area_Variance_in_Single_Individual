leafdata = read.csv("leavesstats.csv")
?anova
ECD.lm = lm(ECD.mm~Orientation,data = leafdata)
ECD.lm = lm(ECD_mm~Orientation,data = leafdata)
ECD.anova = anova(ECD.lm)
summary(ECD.anova)
ECD.anova
ECD.lm
summary(ECD.lm)
ECD.lm = lm(ECD_mm~Orientation,data = leafdata[leafdata$shade!=tree])
ECD.lm = lm(ECD_mm~Orientation,data = leafdata[leafdata$shade!='tree'])
ECD.lm = lm(ECD_mm~Orientation,data = leafdata[leafdata$shade!='tree',])
ECD.anova = anova(ECD.lm)
ECD.anova
summary(ECD.lm)
?boxplot
boxplot(ECD_mm~Orientation,data = leafdata[leafdata$shade!='tree',])
boxplot(ECD_mm~Orientation,data = leafdata[leafdata$shade!='building',])
ECD.lm = lm(ECD_mm~Orientation,data = leafdata[leafdata$shade!='tree',])
ECD.lm = lm(ECD_mm~Orientation,data = leafdata[leafdata$shade!='building',])
ECD.anova = anova(ECD.lm)
ECD.anova
summary(ECD.lm)
data.building = leafdata[leafdata$shade=="building",]
View(leafdata)
boxplot(ECD_mm~Orientation,data = leafdata[leafdata$shade!='building' & leafdata$shade!='tree',])
boxplot(ECD_mm~Orientation,data = leafdata[leafdata$shade!='building' ,])
ECD.lm = lm(ECD_mm~Orientation,data = leafdata[leafdata$shade!='building',])
ECD.anova = anova(ECD.lm)
data.building = leafdata[leafdata$shade=="building",]
data.S = leafdata[data.norm$Orientation=="S",]
data.norm = leafdata[leafdata$shade!="building",]
data.S = leafdata[data.norm$Orientation=="S",]
data.S = leafdata[data.norm$Orientation=="S",]
data.N = leafdata[data.norm$Orientation=="N",]
data.E = leafdata[data.norm$Orientation=="E",]
data.W = leafdata[data.norm$Orientation=="W",]
??bootstrap
?sample
sample(data.E,5)
sample(data.E,1)
sample.int(158,5)
bootstrap.vars = data.frame(matrix(0,nrow = n.bootstrap,ncol = 5))
n.bootstrap = 1000
n.sample = 10
bootstrap.vars = data.frame(matrix(0,nrow = n.bootstrap,ncol = 5))
colnames(bootstrap.vars)=c("N","E","S","W","building")
for(i in 1:n.bootstrap){
bootstrapsample.N = data.N$ECD_mm[sample.int(nrow(data.N),n.sample)]
bootstrap.vars$N[i] = var(bootstrapsample.N)
bootstrapsample.E = data.E$ECD_mm[sample.int(nrow(data.E),n.sample)]
bootstrap.vars$E[i] = var(bootstrapsample.E)
bootstrapsample.S = data.N$ECD_mm[sample.int(nrow(data.S),n.sample)]
bootstrap.vars$S[i] = var(bootstrapsample.S)
bootstrapsample.W = data.N$ECD_mm[sample.int(nrow(data.W),n.sample)]
bootstrap.vars$W[i] = var(bootstrapsample.W)
bootstrapsample.building = data.building$ECD_mm[sample.int(nrow(data.building),n.sample)]
bootstrap.vars$building[i] = var(bootstrapsample.building)
}
(nrow(data.building)
)
View(leafdata)
data.building = leafdata[leafdata$shade=="Building",]
data.norm = leafdata[leafdata$shade!="Building",]
boxplot(ECD_mm~Orientation,data = leafdata[leafdata$shade!='Building' ,])
ECD.lm = lm(ECD_mm~Orientation,data = leafdata[leafdata$shade!='Building',])
ECD.anova = anova(ECD.lm)
ECD.anova
n.bootstrap = 1000
n.sample = 10
bootstrap.vars = data.frame(matrix(0,nrow = n.bootstrap,ncol = 5))
colnames(bootstrap.vars)=c("N","E","S","W","building")
for(i in 1:n.bootstrap){
bootstrapsample.N = data.N$ECD_mm[sample.int(nrow(data.N),n.sample)]
bootstrap.vars$N[i] = var(bootstrapsample.N)
bootstrapsample.E = data.E$ECD_mm[sample.int(nrow(data.E),n.sample)]
bootstrap.vars$E[i] = var(bootstrapsample.E)
bootstrapsample.S = data.N$ECD_mm[sample.int(nrow(data.S),n.sample)]
bootstrap.vars$S[i] = var(bootstrapsample.S)
bootstrapsample.W = data.N$ECD_mm[sample.int(nrow(data.W),n.sample)]
bootstrap.vars$W[i] = var(bootstrapsample.W)
bootstrapsample.building = data.building$ECD_mm[sample.int(nrow(data.building),n.sample)]
bootstrap.vars$building[i] = var(bootstrapsample.building)
}
?reshape
tryyy = reshape(bootstrap.vars)
tryyy = reshape(bootstrap.vars,direction = "long")
tryyy = reshape(bootstrap.vars,direction = "wide")
boxplot(bootstrap.vars)
n.sample = 15
for(i in 1:n.bootstrap){
bootstrapsample.N = data.N$ECD_mm[sample.int(nrow(data.N),n.sample)]
bootstrap.vars$N[i] = var(bootstrapsample.N)
bootstrapsample.E = data.E$ECD_mm[sample.int(nrow(data.E),n.sample)]
bootstrap.vars$E[i] = var(bootstrapsample.E)
bootstrapsample.S = data.N$ECD_mm[sample.int(nrow(data.S),n.sample)]
bootstrap.vars$S[i] = var(bootstrapsample.S)
bootstrapsample.W = data.N$ECD_mm[sample.int(nrow(data.W),n.sample)]
bootstrap.vars$W[i] = var(bootstrapsample.W)
bootstrapsample.building = data.building$ECD_mm[sample.int(nrow(data.building),n.sample)]
bootstrap.vars$building[i] = var(bootstrapsample.building)
}
boxplot(bootstrap.vars)
for(i in 1:n.bootstrap){
bootstrapsample.N = data.N$ECD_mm[sample.int(nrow(data.N),n.sample)]
bootstrap.vars$N[i] = var(bootstrapsample.N)
bootstrapsample.E = data.E$ECD_mm[sample.int(nrow(data.E),n.sample)]
bootstrap.vars$E[i] = var(bootstrapsample.E)
bootstrapsample.S = data.S$ECD_mm[sample.int(nrow(data.S),n.sample)]
bootstrap.vars$S[i] = var(bootstrapsample.S)
bootstrapsample.W = data.W$ECD_mm[sample.int(nrow(data.W),n.sample)]
bootstrap.vars$W[i] = var(bootstrapsample.W)
bootstrapsample.building = data.building$ECD_mm[sample.int(nrow(data.building),n.sample)]
bootstrap.vars$building[i] = var(bootstrapsample.building)
}
boxplot(bootstrap.vars)
colnames(bootstrap.vars)=c("N","E","S","W","building_shade")
for(i in 1:n.bootstrap){
bootstrapsample.N = data.N$ECD_mm[sample.int(nrow(data.N),n.sample)]
bootstrap.vars$N[i] = var(bootstrapsample.N)
bootstrapsample.E = data.E$ECD_mm[sample.int(nrow(data.E),n.sample)]
bootstrap.vars$E[i] = var(bootstrapsample.E)
bootstrapsample.S = data.S$ECD_mm[sample.int(nrow(data.S),n.sample)]
bootstrap.vars$S[i] = var(bootstrapsample.S)
bootstrapsample.W = data.W$ECD_mm[sample.int(nrow(data.W),n.sample)]
bootstrap.vars$W[i] = var(bootstrapsample.W)
bootstrapsample.building = data.building$ECD_mm[sample.int(nrow(data.building),n.sample)]
bootstrap.vars$building_shade[i] = var(bootstrapsample.building)
}
boxplot(bootstrap.vars)
rep(c(1,2),3)
rep(as.matrix(c(1,2)),3)
rep(as.matrix(c(1,2)),3,by.row = T)
rep(as.matrix(c(1,2)),3,by.row = F)
?rep
rep(as.matrix(c(1,2)),each = 3)
boot.data.reshape = data.frame(matrix(bootstrap.vars,nrow = 5*n.bootstrap,ncol = 1)
,Orientation = rep(colnames(bootstrap.vars,each = n.bootstrap)))
boot.data.reshape = data.frame(matrix(bootstrap.vars,nrow = 5*n.bootstrap,ncol = 1)
,Orientation = rep(colnames(bootstrap.vars),each = n.bootstrap))
boot.data.reshape = data.frame(EVD.var = matrix(bootstrap.vars,nrow = 5*n.bootstrap,ncol = 1)
,Orientation = rep(colnames(bootstrap.vars),each = n.bootstrap))
ECD.var.lm = lm(ECD.var~.,data = boot.data.reshape)
boot.data.reshape = data.frame(ECD.var = matrix(bootstrap.vars,nrow = 5*n.bootstrap,ncol = 1)
,Orientation = rep(colnames(bootstrap.vars),each = n.bootstrap))
ECD.var.lm = lm(ECD.var~.,data = boot.data.reshape)
View(boot.data.reshape)
matrix(bootstrap.vars,nrow = 5*n.bootstrap,ncol = 1)
boot.data.reshape = data.frame(ECD.var = matrix( as.matrix(bootstrap.vars),nrow = 5*n.bootstrap,ncol = 1)
,Orientation = rep(colnames(bootstrap.vars),each = n.bootstrap))
View(boot.data.reshape)
View(bootstrap.vars)
ECD.var.lm = lm(ECD.var~.,data = boot.data.reshape)
anova(ECD.var.lm)
ECD.anova
anova(ECD.var.lm)
